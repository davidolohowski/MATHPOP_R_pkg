# simulate GC data with noisy magnitudes
simulate_Y_noisy <- function(S, b0, c, N, R_eff, e, n, theta, mu, sigma, a = 0.0884, b = 0.645, m0 = 25.5){
  A <- sf::st_area(st_as_sf(S))
  K <- nrow(c)
  N_b <- floor(b0*A)
  if(N_b == 0){
    Y <- data.frame()
  }
  else{
    Y0 <- as.data.frame(sp::spsample(S, N_b, type = 'random'))
    M <- rnorm(N_b, mu[1], sigma[1])
    M_err <- rnorm(N_b, M, err_M(M))
    Y <- data.frame(x = Y0[,1], y = Y0[,2], M = M_err, Mt = M, id = rep(0,N_b), e_M = err_M(M, m0, a, b))
  }
  for (i in 1:K) {
    if(N[i] == 0)
    {
      Y <- Y
    }
    else{
      M <- rnorm(N[i], mu[i+1], sigma[i+1])
      M_err <- rnorm(N[i], M, err_M(M))
      Y <- bind_rows(Y, data.frame(as.data.frame(simulate_Sersic(N[i], c[i,], R_eff[i], e[i], n[i], theta[i])), M = M_err, Mt = M, id = rep(i, N[i]), e_M = err_M(M)))
    }
  }
  Y <- Y[unlist(sf::st_intersects(sf::st_as_sf(S), sf::st_as_sf(Y, coords = c('x','y')))),]
  return(Y)
}
